using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class RE_Follower : MonoBehaviour
{
    public int followDelay;

    public float maxShotDelay;
    public float curShotDelay;
    public RE_ObjectManager objectManager;

    public Vector3 followerPos;
    public Transform playerPos;
    public Queue<Vector3> parentPos;

    void Awake()
    {
        parentPos = new Queue<Vector3>();
    }

    void Update()
    {   
        Watch();
        Follow();
        Fire();
        Reload();
    }

    void Watch()
    {
        if(!parentPos.Contains(playerPos.position))
        {
            parentPos.Enqueue(playerPos.position);
        }

        if(parentPos.Count > followDelay)
        {
            followerPos = parentPos.Dequeue();
        }
        else if(parentPos.Count < followDelay)
        {
            followerPos = playerPos.position;
        }
    }

    void Follow()
    {
        transform.position = followerPos;
    }

    void Fire()
    {
        if(!Input.GetButton("Fire1")) return;
        if(curShotDelay < maxShotDelay) return;

        GameObject bullet = objectManager.MakeObj("FollowerBullet");
        bullet.transform.position = transform.position;
        Rigidbody2D rigid = bullet.GetComponent<Rigidbody2D>();
        rigid.AddForce(Vector2.up * 10, ForceMode2D.Impulse);

        curShotDelay = 0;
    }

    void Reload()
    {
        curShotDelay += Time.deltaTime;
    }

}